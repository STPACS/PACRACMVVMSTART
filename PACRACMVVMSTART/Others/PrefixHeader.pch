//
//  PrefixHeader.pch
//  PACRACMVVMSTART
//
//  Created by Mr. Chen on 2018/4/17.
//  Copyright © 2018年 STPACS. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#import "PACCommonmacro.h"  //常用宏定义
#import "PACConstants.h"    //全局变量
#import <YYKit/YYKit.h>
#import <ReactiveCocoa/ReactiveCocoa.h>
#import "UINavigationItem+CustomItem.h"
#import "PACVMServicesProtocol.h"
#import <MJRefresh.h>
#import "AppDelegate.h"
#import "UIColor+Hex.h"
#import "zhThemeOperator.h"
#import "zhThemePicker.h"
#import "zhTheme+Components.h"
#import "UIViewController+zhStatusBarStyle.h"
#import "RegexUtil.h"//正则
#import "NSObject+Parse.h"//数据解析
#import "NSObject+ShowTips.h"//弹出提示
#import "PACColorSet.h"
#import "PACReactiveViewProtocol.h"
#import <Masonry.h>




#define kSharedAppDelegate ((AppDelegate *)[UIApplication sharedApplication].delegate)
#define kStrFormat(str,...) [NSString stringWithFormat:str,##__VA_ARGS__]
#define kKeyWindow [UIApplication sharedApplication].keyWindow
#define FONT(a)  [UIFont systemFontOfSize:a]
#define ImageNamed(a) [UIImage imageNamed:a]
#define kCurrentCityInfoDefaults [NSUserDefaults standardUserDefaults]

//打印日志
#ifdef DEBUG
#define MYLog(fmt, ...)  NSLog((@"[%s Line %d] \n" fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#else
#define MYLog(fmt, ...)
#endif

#define RGBA(r,g,b,a)   [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]

//判断设备是否为iPhoneX
#define kDeviceIsiPhoneX                            ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125,2436),[[UIScreen mainScreen] currentMode].size) : NO)

// 缓存路径
#define CACHPATH [NSSearchPathForDirectoriesInDomains(NSCachesDirectory,NSUserDomainMask, YES) objectAtIndex:0]

//判断设备
#define IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
#define IS_RETINA ([[UIScreen mainScreen] scale] >= 2.0)
#define SCALE ([UIScreen mainScreen].scale)
#define SCREEN_MAX_LENGTH (MAX(SCREEN_WIDTH, SCREEN_HEIGHT))
#define SCREEN_MIN_LENGTH (MIN(SCREEN_WIDTH, SCREEN_HEIGHT))
#define IS_IPHONE_4_OR_LESS (IS_IPHONE && SCREEN_MAX_LENGTH < 568.0)
#define IS_IPHONE_6 (IS_IPHONE && SCREEN_MAX_LENGTH == 667.0)
#define IS_IPHONE_6P (IS_IPHONE && SCREEN_MAX_LENGTH == 736.0)

#define IS_IPHONE_5 (([[UIScreen mainScreen] bounds].size.height == 568) && ([[UIScreen mainScreen] bounds].size.width == 320))
#define IS_IPHONE_X (([[UIScreen mainScreen] bounds].size.height == 812) && ([[UIScreen mainScreen] bounds].size.width == 375))
//判断iPHoneXr
#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iPhoneXs
#define IS_IPHONE_Xs ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iPhoneXs Max
#define IS_IPHONE_Xs_Max ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断是否是ipad
#define isPad ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad)

#define StatusHeight (int)(IS_IPHONE_X || IS_IPHONE_Xr || IS_IPHONE_Xs || IS_IPHONE_Xs_Max ? 44:20)
#define TabbarHeight (int)(IS_IPHONE_X || IS_IPHONE_Xr || IS_IPHONE_Xs || IS_IPHONE_Xs_Max ? 83:49)
#define BottomHeight (int)(IS_IPHONE_X || IS_IPHONE_Xr || IS_IPHONE_Xs || IS_IPHONE_Xs_Max ? 34:0)

#define naviBarHeight (StatusHeight + 44)

#define AdjustsScrollViewInsetNever(controller,view) if(@available(iOS 11.0, *)) {view.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;} else if([controller isKindOfClass:[UIViewController class]]) {controller.automaticallyAdjustsScrollViewInsets = false;}

// 代码适配
#define kAutoScaleX [UIScreen mainScreen].bounds.size.width/375
#define kAutoScaleY [UIScreen mainScreen].bounds.size.height/667
#define SafeAreaTopHeight (IS_IPHONE_X==YES)? 24.0f : 0.0f
#define Height_TabBar    (IS_IPHONE_X==YES)?83.0f: 49.0f
#define Height_NavContentBar 44.0f
#define IndexCellHeight 250

#define kScreenWidth320 (SCREEN_WIDTH == 320)
#define KScreenWidth375 (SCREEN_WIDTH == 375)
#define KScreenWidth414 (SCREEN_WIDTH == 414)
#define RGBACOLOR(r,g,b,a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:(a)]

#define RandomColor [UIColor colorWithRed:arc4random_uniform(256)/255.0 green:arc4random_uniform(256)/255.0 blue:arc4random_uniform(256)/255.0 alpha:1];
#define Color(r,g,b) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:1]


#define SCREEN_WIDTH   [UIScreen mainScreen].bounds.size.width
#define SCREEN_HEIGHT [UIScreen mainScreen].bounds.size.height

#define ELSareArea  (MAX(SCREEN_WIDTH, SCREEN_HEIGHT)  == 812 ? 34.00 : 0.00)
#define NAVH (MAX(SCREEN_WIDTH, SCREEN_HEIGHT)  == 812 ? 88 : 64)
#define TABBARH (MAX(SCREEN_WIDTH, SCREEN_HEIGHT)  == 812 ? 83 : 49)
#define WS(weakSelf) __weak __typeof(&*self)weakSelf = self;
#define kRHReturnRootViewController @"returnRootViewController"

#ifdef DEBUG
#define PACLog(...) NSLog(@"%s 第%d行 \n %@\n\n",__func__,__LINE__,[NSString stringWithFormat:__VA_ARGS__])
#else
#define PACLog(...)
#endif

//弱引用/强引用
#define PACWeakSelf(type)  __weak typeof(type) weak##type = type;
#define PACStrongSelf(type)  __strong typeof(type) type = weak##type;



//存储对象

#define UserDefaultSetObjectForKey(__VALUE__,__KEY__) \
{\
[[NSUserDefaults standardUserDefaults] setObject:__VALUE__ forKey:__KEY__];\
[[NSUserDefaults standardUserDefaults] synchronize];\
}
//获得存储的对象
#define UserDefaultObjectForKey(__KEY__)  [[NSUserDefaults standardUserDefaults] objectForKey:__KEY__]

//     删除对象
#define UserDefaultRemoveObjectForKey(__KEY__) \
{\
[[NSUserDefaults standardUserDefaults] removeObjectForKey:__KEY__];\
[[NSUserDefaults standardUserDefaults] synchronize];\
}

/** 获取temp,沙盒Document,沙盒Cache目录*/
#define PAC_PATH_TEMP        NSTemporaryDirectory()
#define PAC_PATH_DOCUMENT    [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) firstObject]
#define PAC_PATH_CACHE       [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) firstObject]

//获取当前语言
#define PACCurrentLanguage ([[NSLocale preferredLanguages] objectAtIndex:0])

#define HEXCOLOR(hexValue) [UIColor colorWithRed:((float)((hexValue & 0xFF0000) >> 16)) / 255.0 green:((float)((hexValue & 0xFF00) >> 8)) / 255.0 blue:((float)(hexValue & 0xFF)) / 255.0 alpha:1.0f]
// 控件尺寸适配的宏函数
#define kFit(x) (kScreenWidth*((x)/375.0))

#define kSource @"1"


#endif /* PrefixHeader_pch */
